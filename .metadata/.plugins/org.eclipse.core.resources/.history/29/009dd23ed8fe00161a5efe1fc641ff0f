/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package user_parser;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Handles all of the threading/parsing/job tasks, launched when a script is loaded
 * or when "run" is clicked in the main panel (if jobs remain in the queue)
 * @author toddbodnar
 */
public class jobHandler {
    
    /**
     * Give a job and a gui and do it
     * @param theJob
     * @param gui can be null if you don't want one
     */
    public static void process(job theJob, main_panel gui)
    {
        File f = theJob.getNextFile();
        //theJob.attachGUI(gui);
        
        
        
        
        while(f!=null)
        {
            try {
                BufferedReader in = new BufferedReader(new FileReader(f));
                StringBuilder s = new StringBuilder();
                String st = in.readLine();
                while(st!=null)
                {
                   // System.out.println(st);
                    s.append(st);
                    st = in.readLine();
                    
                }
               in.close();
                theJob.process(new user(s.toString()));
            } catch (FileNotFoundException ex) {
               // Logger.getLogger(jobHandler.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
              //  Logger.getLogger(jobHandler.class.getName()).log(Level.SEVERE, null, ex);
            } catch (java.lang.StringIndexOutOfBoundsException ex){
              //  Logger.getLogger(jobHandler.class.getName()).log(Level.SEVERE, null, ex);
            }
            f = theJob.getNextFile();
            
        }
        
        theJob.end();
    }
    
    
}
