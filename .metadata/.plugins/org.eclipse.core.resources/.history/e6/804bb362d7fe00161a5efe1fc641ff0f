/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package user_interface;

import classification.classifier;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import twitter.tweet;

/**
 *
 * @author toddbodnar
 */
public class frequencyOfFlu implements twitterprocess{
    public frequencyOfFlu()
    {
        count = new int[700][9];
        for(int i=0;i<700;i++)
            for(int j=0;j<9;j++)
                count[i][j]=0;
        try {
            classify = null;//new classifier();
        }  catch (Exception ex) {
            Logger.getLogger(frequencyOfFlu.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(-1);
        }
    }
    //Note, this should first go through keyword_filter
    @Override
    public void consume(tweet t) {
        Date d = new Date(t.time);
        Calendar c = Calendar.getInstance();
        c.setTime(d);
        double prob=-1;
        int index = c.get(Calendar.DAY_OF_YEAR) + 365 * (c.get(Calendar.YEAR)-2011);
        try {
            prob = classify.getProbability(t.text);
        } catch (Exception ex) {
            Logger.getLogger(frequencyOfFlu.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int j=0;j<9;j++)
        {
            if(cuts[j]<= prob)
                count[index][j]++;
        }
    }

    @Override
    public String end() {
        long total=0;
        for(int i=0;i<700;i++)
        {
            total+=count[i][4];
            
            for(int j=0;j<9;j++)
            {
                System.out.print(count[i][j]+",");
            }
            System.out.println();
        }
        return total+" ILI tweets found.";
    }

    public String toolTip()
    {
        return "Finds number of ILI tweets  per day";
    }
    
    @Override
    public boolean quitAtEnd() {
        return true;
    }
    classifier classify;
    int count[][];
    double cuts[] = {.1,.2,.3,.4,.5,.6,.7,.8,.9};

    @Override
    public String buttonMenu() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public twitterprocess clone() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public twitterprocess load(String in) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public String save() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
