library("dplyr")
help(dplyr)
country = c(rep('US',3),rep('RUS',3),rep('GB',3))
Medal = rep(c('Gold','Silver','Bronze'),3)
counts = c(976.0, 759.5, 668.5, 440.0, 357.0,326.0, 233.5, 272.5, 271.5)
Olympics = as.data.frame(
cbind(country,
Medal,
counts))
Olympics
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics
as.numeric(levels(Olympics$counts))
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
as.numeric(levels(Olympics$counts))
Olympics$counts
as.numeric(levels(Olympics$counts))[Olympics$counts]
as.numeric(levels(Olympics$counts))[2]
as.numeric(levels(Olympics$counts))[272.2]
as.numeric(levels(Olympics$counts))[272.5]
as.numeric(levels(Olympics$counts))[271.5]
help(order)
order(as.numeric(levels(Olympics$counts)),decreasing = T)
order(as.numeric(levels(Olympics$counts)),decreasing = F)
Olympics$Medal
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics$Medal
Olympics$counts
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$counts
Olympics
Olympics <- Olympics %>%
group_by(country) %>%
mutate(mid_y=cumsum(counts) - 0.5*counts)
Olympic
Olympics
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics <- Olympics %>%
group_by(country)
Olympics
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics
help(group_by)
help(%>%)
help(mutate)
group_by(country)
Olympics
Olympics %>%
country
help(group_by)
group_by(Olympics,country)
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics
group_by(Olympics,country)
group_by(Olympics,Medal)
group_by(Olympics,counts)
group_by(Olympics,country)
Olympics <- Olympics %>%
group_by(country)
%>%
mutate(mid_y=cumsum(counts) - 0.5*counts) # %>% means "apply function<"
#Do the plot
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics <- Olympics %>%
group_by(country) %>%
mutate(mid_y=cumsum(counts) - 0.5*counts) # %>% means "apply function<"
Olympics
library(ggplot2)
library(SciencesPo) # for the theme.
install.packages("SciencesPo")
help(mutate)
library(ggplot2)
library(SciencesPo) # for the theme.
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
print(g)
g <- g + geom_bar(stat = 'identity')
print(g)
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
print(g)
g <- g + scale_y_continuous(limits = c(0, 2500))
print(g)
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
print(g)
g <- g + geom_text(aes(label=counts, y = counts), size = 3)
print(g)
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
g <- g + geom_bar(stat = 'identity')
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
g <- g + scale_y_continuous(limits = c(0, 2500))
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
g <- g + labs(x='',y='Number of Medals', title='Olympic Medals')
print(g)
g <- g + coord_flip() + theme_scipo(base_size = 13)
g <- g + coord_flip() + theme_scipo(base_size = 13)
help(theme_scipo)
??theme_scipo
g <- g + coord_flip() #+ theme_scipo(base_size = 13)
print(g)
g <- g + no_y_gridlines()
library(ggplot2)
library(SciencesPo) # for the theme.
g <- g + no_y_gridlines()
library(SciencesPo) # for the theme.
library("SciencesPo") # for the theme.
help(theme_scipo)
help(SciencesPo)
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
g <- g + geom_bar(stat = 'identity')
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
g <- g + scale_y_continuous(limits = c(0, 2500))
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
g <- g + labs(x='',y='Number of Medals', title='Olympic Medals')
g <- g + coord_flip() #+ theme_scipo(base_size = 13)
g <- g + #no_y_gridlines()
print(g)
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
g <- g + geom_bar(stat = 'identity')
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
g <- g + scale_y_continuous(limits = c(0, 2500))
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
g <- g + labs(x='',y='Number of Medals', title='Olympic Medals')
g <- g + coord_flip() #+ theme_scipo(base_size = 13)
g <- g + no_y_gridlines()
print(g)
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
g <- g + geom_bar(stat = 'identity')
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
g <- g + scale_y_continuous(limits = c(0, 2500))
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
g <- g + labs(x='',y='Number of Medals', title='Olympic Medals')
g <- g + coord_flip() + theme_scipo(base_size = 13)
g <- g + no_y_gridlines()
print(g)
#https://www.r-bloggers.com/yet-the-worst-olympic-chart/
library("dplyr")
country <- c(rep('US',3),rep('RUS',3),rep('GB',3))
Medal <- rep(c('Gold','Silver','Bronze'),3)
counts <- c(976.0, 759.5, 668.5, 440.0, 357.0,326.0, 233.5, 272.5, 271.5)
Olympics <- as.data.frame(
cbind(country,
Medal,
counts))
Olympics$counts <- as.numeric(levels(Olympics$counts))[Olympics$counts]
Olympics$Medal <- factor(Olympics$Medal,levels = c('Gold','Silver','Bronze'))
Olympics <- Olympics %>%
group_by(country) %>%
mutate(mid_y=cumsum(counts) - 0.5*counts) # %>% means "apply function<"
#Do the plot
library("ggplot2")
library("SciencesPo") # for the theme.
g <- ggplot(Olympics,aes(x = country, y=counts, fill = Medal))
g <- g + geom_bar(stat = 'identity')
g <- g + scale_fill_manual(values = c('#FFD700','#C0C0C0','#CD7F32'))
g <- g + scale_y_continuous(limits = c(0, 2500))
g <- g + geom_text(aes(label=counts, y = mid_y), size = 3)
g <- g + labs(x='',y='Number of Medals', title='Olympic Medals')
g <- g + coord_flip() #+ theme_scipo(base_size = 13)
g <- g #+ no_y_gridlines()
print(g)
